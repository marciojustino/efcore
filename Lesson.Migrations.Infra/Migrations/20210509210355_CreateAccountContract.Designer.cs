// <auto-generated />
using System;
using Lesson.Migrations.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lesson.Migrations.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210509210355_CreateAccountContract")]
    partial class CreateAccountContract
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OpenedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Active");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("BankId");

                    b.HasIndex("Number")
                        .HasDatabaseName("IX_Account_Number");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.AccountClient", b =>
                {
                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.HasKey("AccountId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("AccountClient");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Agency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("Code")
                        .HasDatabaseName("IX_Agency_Code");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Agency_Name");

                    b.ToTable("Agency");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Bank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .HasDatabaseName("IX_Bank_Code");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Bank_Name");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Document")
                        .HasDatabaseName("IX_Client_Document");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Client_Name");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("SignedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Account", b =>
                {
                    b.HasOne("Lesson.Migrations.Infra.Domain.Agency", "Agency")
                        .WithMany("Accounts")
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Lesson.Migrations.Infra.Domain.Bank", "Bank")
                        .WithMany("Accounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Agency");

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.AccountClient", b =>
                {
                    b.HasOne("Lesson.Migrations.Infra.Domain.Account", "Account")
                        .WithMany("Owners")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Lesson.Migrations.Infra.Domain.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Agency", b =>
                {
                    b.HasOne("Lesson.Migrations.Infra.Domain.Bank", "Bank")
                        .WithMany("Agencies")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Contract", b =>
                {
                    b.HasOne("Lesson.Migrations.Infra.Domain.Account", "Account")
                        .WithOne("Contract")
                        .HasForeignKey("Lesson.Migrations.Infra.Domain.Contract", "AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Account", b =>
                {
                    b.Navigation("Contract");

                    b.Navigation("Owners");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Agency", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Bank", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Agencies");
                });

            modelBuilder.Entity("Lesson.Migrations.Infra.Domain.Client", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
